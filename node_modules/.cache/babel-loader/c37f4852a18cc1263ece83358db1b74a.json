{"ast":null,"code":"var _jsxFileName = \"/Users/kaleb/dev/React/e-store/E-commerceStore/src/components/Home.js\";\nimport React from 'react';\nimport Path from \"./Router\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://my-json-server.typicode.com/tdmichaelis/json-api/products\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Home Page\"), items.map(item => React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, item.img, \" \", item.title, item.description, \" \", item.price, item.rating, \" \", item.category)));\n    }\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/kaleb/dev/React/e-store/E-commerceStore/src/components/Home.js"],"names":["React","Path","Home","Component","constructor","props","state","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","error","render","message","map","item","id","img","title","description","price","rating","category"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,UAAjB;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AAGDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,mEAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGQG,MAAM,IAAI;AACN,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAEM;AAFG,OAAd;AAIH,KART,EASSE,KAAD,IAAW;AACP,WAAKD,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVS,QAAAA;AAFU,OAAd;AAIH,KAdT;AAgBH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKX,KADnC;AAAA,UACGU,KADH,eACGA,KADH;AAAA,UACUT,QADV,eACUA,QADV;AAAA,UACoBC,KADpB,eACoBA,KADpB;;AAEL,QAAIQ,KAAJ,EAAW;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACE,OAAnB,CAAP;AACH,KAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFM,MAEA;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAIKC,KAAK,CAACW,GAAN,CAAUC,IAAI,IACX;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACE,GADV,OACgBF,IAAI,CAACG,KADrB,EAEKH,IAAI,CAACI,WAFV,OAEwBJ,IAAI,CAACK,KAF7B,EAGKL,IAAI,CAACM,MAHV,OAGmBN,IAAI,CAACO,QAHxB,CADH,CAJL,CADJ;AAcH;AACJ;;AAnD6B;;AAuDlC,eAAezB,IAAf","sourcesContent":["\nimport React from 'react';\nimport Path from \"./Router\";\n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            items: []\n        };\n    }\n\n\n    componentDidMount() {\n        fetch(\"https://my-json-server.typicode.com/tdmichaelis/json-api/products\")\n            .then(res => res.json())\n            .then(\n                result => {\n                    this.setState({\n                        isLoaded: true,\n                        items: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        const { error, isLoaded, items } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <ul>\n                    <div>\n                        Home Page\n                    </div>\n                    {items.map(item => (\n                        <li key={item.id}>\n                            {item.img} {item.title}\n                            {item.description} {item.price}\n                            {item.rating} {item.category}\n                        </li>\n                    ))}\n                </ul>\n            );\n        }\n    }\n}\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}