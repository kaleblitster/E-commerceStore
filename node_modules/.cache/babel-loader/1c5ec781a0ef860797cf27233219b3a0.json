{"ast":null,"code":"var _jsxFileName = \"/Users/kaleb/dev/React/e-store/E-commerceStore/src/App.js\";\nimport React from 'react';\nimport Path from './components/Router';\nimport Home from './components/Home';\nimport Products from './components/Products';\nimport Details from './components/Details';\nimport Cart from './components/Cart';\nimport Login from './components/Login';\nimport Logo from './generic.png';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://my-json-server.typicode.com/tdmichaelis/json-api/products\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), items.map(item => React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, item.title, \" \", item.description, item.img, \" \", item.price, item.rating, \" \", item.category)));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kaleb/dev/React/e-store/E-commerceStore/src/App.js"],"names":["React","Path","Home","Products","Details","Cart","Login","Logo","App","Component","constructor","props","state","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","error","render","message","map","item","id","title","description","img","price","rating","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAGDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,mEAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGQG,MAAM,IAAI;AACR,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM;AAFK,OAAd;AAID,KART,EASSE,KAAD,IAAW;AACT,WAAKD,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZS,QAAAA;AAFY,OAAd;AAID,KAdT;AAgBD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAC4B,KAAKX,KADjC;AAAA,UACCU,KADD,eACCA,KADD;AAAA,UACQT,QADR,eACQA,QADR;AAAA,UACkBC,KADlB,eACkBA,KADlB;;AAEP,QAAIQ,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACE,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIGC,KAAK,CAACW,GAAN,CAAUC,IAAI,IACX;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACE,KADR,OACgBF,IAAI,CAACG,WADrB,EAEGH,IAAI,CAACI,GAFR,OAEcJ,IAAI,CAACK,KAFnB,EAGGL,IAAI,CAACM,MAHR,OAGiBN,IAAI,CAACO,QAHtB,CADH,CAJH,CADJ;AAcD;AACF;;AAnD+B;;AAqDlC,eAAezB,GAAf","sourcesContent":["import React from 'react';\n\nimport Path from './components/Router'\nimport Home from './components/Home'\nimport Products from './components/Products'\nimport Details from './components/Details'\nimport Cart from './components/Cart'\nimport Login from './components/Login'\nimport Logo from './generic.png'\nimport './App.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      items: []\n    };\n  }\n\n\n  componentDidMount() {\n    fetch(\"https://my-json-server.typicode.com/tdmichaelis/json-api/products\")\n        .then(res => res.json())\n        .then(\n            result => {\n              this.setState({\n                isLoaded: true,\n                items: result\n              });\n            },\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n        )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n          <ul>\n            <li>\n              <Home/>\n            </li>\n            {items.map(item => (\n                <li key={item.id}>\n                  {item.title} {item.description}\n                  {item.img} {item.price}\n                  {item.rating} {item.category}\n                </li>\n            ))}\n          </ul>\n      );\n    }\n  }\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}